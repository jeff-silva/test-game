var f=Object.defineProperty;var w=(h,a,e)=>a in h?f(h,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[a]=e;var n=(h,a,e)=>w(h,typeof a!="symbol"?a+"":a,e);import"./ezY9ZAhu.js";import{O as c}from"./D3Mqfikn.js";import{f as v,T as M,g as y,Q as C,S as b,P as S,C as k,W as A,E as g,B,h as E,j as P,k as z,l as T,m as R,i as D,n as G,o as L,p as O,b as j,q as F,r as I,s as U,t as H,M as q,L as V,c as W,d as N,e as u}from"./DQ4UCc7_.js";import{G as J}from"./BCwzVlOA.js";import{_ as d}from"./vUEbHlag.js";const _=window.setInterval;d.mixin({uuid:()=>{var h=d.now();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var e=(h+d.random(16))%16|0;return h=Math.floor(h/16),(a=="x"?e:e&3|8).toString(16)})}});const le=class{constructor(a={}){n(this,"options",{el:null,debug:!1});n(this,"instances",[]);this.options={...this.options,...a},this.extensions().map(e=>{this[e.name]=new e.class(this)})}extensions(){return[{name:"preload",class:Y},{name:"event",class:K},{name:"input",class:X},{name:"canvas",class:$},{name:"game",class:Z},{name:"physics",class:ee}]}init(){setTimeout(async()=>{await c.init(),await this.preload.init(this.preloadFiles()),this.create(),this.update()},10)}create(){console.log("create",this),this.extensions().map(a=>{this[a.name].onCreate()}),this.onCreate(),this.event.dispatch("create"),this.instances.map(a=>{a.onCreate(),a.scripts.map(e=>{e.onCreate()})})}update(){this.extensions().map(a=>{this[a.name].onUpdate()}),this.onUpdate(),this.event.dispatch("update"),this.instances.map(a=>{a.onUpdate(),a.scripts.map(e=>{e.onUpdate()})}),requestAnimationFrame(()=>this.update())}destroy(){this.extensions().map(a=>{this[a.name].onDestroy()}),this.onDestroy(),this.event.dispatch("destroy"),this.instances.map(a=>{a.onDestroy()})}onCreate(){}onUpdate(){}onDestroy(){}preloadFiles(){return{}}instanceAdd(a){return this.instances.push(a),a}},ce=class{constructor(a){n(this,"root",null);n(this,"parent",null);n(this,"scripts",[]);this.root=a,this.parent=a}onCreate(){}onUpdate(){}onDestroy(){}scriptAdd(a){return this.scripts.push(a),a}},Q=class{constructor(){n(this,"parent",null)}onCreate(){}onUpdate(){}onDestroy(){}};class m{constructor(a){this.parent=a}onCreate(){}onUpdate(){}onDestroy(){}}class Y extends m{constructor(){super(...arguments);n(this,"files",{})}init(e={}){return new Promise((t,r)=>{Object.entries(e).length==0&&t();const s={gltf:i=>new J(o).load(i.url,l=>{i.loaded=!0,i.model=l})},o=Object.assign(new v,{onProgress:(i,l,p)=>{const x=l/p*100;this.parent.event.dispatch("preload.loading.progress",{progress:x,url:i,itemsLoaded:l,itemsTotal:p})},onLoad:()=>{this.parent.event.dispatch("preload.loading.success"),t()}});Object.entries(e).map(([i,l])=>{l.name=i,l.loaded=!1,l.ext=l.url.split("?").at(0).split(".").at(-1),l.content=null,typeof s[l.ext]=="function"&&s[l.ext](l),this.files[i]=l})})}}class K extends m{constructor(){super(...arguments);n(this,"events",[])}on(e,t){this.events.push({name:e,callback:t})}dispatch(...e){const t=e,r=t.shift();this.events.filter(s=>s.name==r).map(({name:s,callback:o})=>{o.apply(this,t)})}}class X extends m{constructor(){super(...arguments);n(this,"events",[]);n(this,"keyboardEvs",{})}keyboard(...e){if(e.length==1){let t=Array.isArray(e[0])?e[0]:[e[0]];for(let r in t)if(typeof this.keyboardEvs[t[r]]<"u")return this.keyboardEvs[t[r]];return!1}if(e.length==2){let[t,r]=e;(Array.isArray(t)?t:[t]).map(s=>{this.events.push({key:s,type:null,call:r})})}if(e.length==3){let[t,r,s]=e;(Array.isArray(t)?t:[t]).map(o=>{(Array.isArray(r)?r:[r]).map(i=>{this.events.push({key:o,type:i,call:s})})})}}onCreate(){this.getEvents().map(([e,t])=>{document.addEventListener(e,r=>{(document.activeElement==this.parent.canvas.el||this.parent.canvas.el.contains(document.activeElement))&&(r.preventDefault(),this.eventHandler(r,e))})}),_(()=>{for(let e in this.keyboardEvs){const t=this.keyboardEvs[e],r=this.events.filter(s=>s.type==null);if(r[0]){r[0].call(t);break}}},1)}onDestroy(){this.getEvents().map(e=>{document.removeEventListener(...e)})}eventHandler(e,t){e.key&&(this.keyboardEvs[e.key]=e),e.code&&(this.keyboardEvs[e.code]=e),e.keyCode&&(this.keyboardEvs[e.keyCode]=e),e.type=="keyup"&&[e.key,e.code,e.keyCode].map(s=>{typeof this.keyboardEvs[s]>"u"||delete this.keyboardEvs[s]});const r=this.events.filter(s=>s.type==e.type&&(s.key==e.key||s.key==e.code||s.key==e.keyCode));r[0]&&r[0].call(e)}getEvents(){let e=[{type:"mouse",name:"click"},{type:"mouse",name:"mouseenter"},{type:"mouse",name:"mouseleave"},{type:"mouse",name:"mousemove"},{type:"mouse",name:"pointermove"},{type:"mouse",name:"pointerdown"},{type:"mouse",name:"pointerout"},{type:"mouse",name:"pointerlockchange"},{type:"keyboard",name:"keyup"},{type:"keyboard",name:"keydown"}],t=[];return e.map(r=>{t.push([r.name,s=>this.eventHandler(s,r)])}),t}}class $ extends m{constructor(){super(...arguments);n(this,"el",null);n(this,"width",0);n(this,"height",0)}onCreate(){const{options:e}=this.parent;this.el=document.querySelector(e.el),this.el.setAttribute("tabindex","0"),this.resizeHandler(),window.addEventListener("resize",()=>{this.resizeHandler(),this.parent.event.dispatch("canvas.resize",{width:this.width,height:this.height})})}resizeHandler(){this.width=this.el.offsetWidth,this.height=this.el.offsetHeight}}class Z extends m{onCreate(){const{width:a,height:e}=this.parent.canvas,{canvas:t}=this.parent;this.RAPIER=c,this.THREE=M,this.helpers={Vec3:(r={})=>{r=JSON.parse(JSON.stringify(r));let s=new y(r.x||0,r.y||0,r.z||0);return s.toArray=()=>[s.x,s.y,s.z],s.toJson=()=>({x:s.x,y:s.y,z:s.z}),s},Quat:(r={})=>{const s=new C(r.x||0,r.y||0,r.z||0,r.w||0);return s.toArray=()=>[s.x,s.y,s.z,s.w],s.toJson=()=>({x:s.x,y:s.y,z:s.z,w:s.w}),s}},this.scene=new b,this.camera=new S(50,a/e,1,100),this.clock=new k,this.renderer=new A({antialias:!0}),t.el.innerHTML="",t.el.style.position="relative",t.el.style.minHeight="100px",t.el.appendChild(this.renderer.domElement),this.renderer.domElement.style.width="100%",this.renderer.domElement.style.height="100%",this.resizeHandler(a,e),this.parent.event.on("canvas.resize",({width:r,height:s})=>{this.resizeHandler(r,s)})}onUpdate(){this.renderer.render(this.scene,this.camera)}resizeHandler(a,e){this.renderer.setSize(a,e),this.camera.aspect=a/e,this.camera.updateProjectionMatrix()}getPointerLockControls(a={}){const e=new Proxy({target:null,pointerSpeed:.4,minPolarAngle:0,maxPolarAngle:Math.PI,updateAxisX:!0,updateAxisY:!0,...a,locked:!1,script:this,lock:()=>{this.parent.canvas.el.requestPointerLock()},moveForward(t){const r=e.target,s=new y;s.setFromMatrixColumn(r.matrix,0),s.crossVectors(r.up,s),r.position.addScaledVector(s,t)},moveRight(t){const r=e.target,s=new y;s.setFromMatrixColumn(r.matrix,0),r.position.addScaledVector(s,t)}},{get(t,r){return r=="locked"?!!document.pointerLockElement:t[r]}});return this.parent.event.on("input.click",t=>{(this.parent.canvas.el==t.target||this.parent.canvas.el.contains(t.target))&&e.lock()}),this.parent.event.on("input.pointermove",t=>{if(!e.locked||!e.target)return;const r=Math.PI/2,s=e.target,o=.002*e.pointerSpeed,i=new g(0,0,0,"YXZ");i.setFromQuaternion(s.quaternion),e.updateAxisY&&(i.y-=t.movementX*o),e.updateAxisX&&(i.x-=t.movementY*o,i.x=Math.max(r-e.maxPolarAngle,Math.min(r-e.minPolarAngle,i.x))),s.quaternion.setFromEuler(i)}),e}}class ee extends m{constructor(){super(...arguments);n(this,"debug",!1);n(this,"scene",null);n(this,"world",null);n(this,"dynamicBodies",{})}onCreate(){this.world=new c.World({x:0,y:-9.81,z:0}),this.parent.options.debug&&(this.debug=new te(this.parent.game.scene,this.world))}onUpdate(){for(let t in this.dynamicBodies){const{mesh:r,body:s,shape:o}=this.dynamicBodies[t];if(!s)return;typeof s.translation=="function"&&r.position.copy(s.translation()),typeof s.rotation=="function"&&r.quaternion.copy(s.rotation())}this.parent.options.debug&&this.debug&&this.world&&this.debug.update();const e=this.parent.game.clock.getDelta();this.world.timestep=Math.min(e,.1),this.world.step()}getThreejsGeometryOptions(e={}){return{type:"box",radius:1,length:1,capSegments:4,radialSegments:8,heightSegments:16,openEnded:!1,thetaStart:0,width:1,height:1,depth:1,thetaLength:Math.PI*2,radiusTop:1,radiusBottom:1,widthSegments:32,phiStart:0,phiLength:Math.PI*2,...e}}getThreejsGeometry(e={}){return e=this.getThreejsGeometryOptions(e),{box:(t={})=>new B(t.width,t.height,t.depth),capsule:(t={})=>new E(t.radius,t.length,t.capSegments,t.radialSegments),cone:(t={})=>new P(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength),cylinder:(t={})=>new z(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength),plane:(t={})=>new T(t.width,t.height,t.widthSegments,t.heightSegments),sphere:(t={})=>new R(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}[e.type](e)}getThreejsMaterialOptions(e={}){return{type:"basic",color:16777215,...e}}getThreejsMaterial(e={}){e=this.getThreejsMaterialOptions(e);const t=d.clone(e);return delete t.type,{basic:(r={})=>new D(r),depth:(r={})=>new G(r),lambert:(r={})=>new L(r),matcap:(r={})=>new O(r),normal:(r={})=>new j(r),phong:(r={})=>new F(r),physical:(r={})=>new I(r),standard:(r={})=>new U(r),toon:(r={})=>new H(r)}[e.type](t)}getThreejsMesh(e,t,r={}){r=d.merge({position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0,w:0}},r);const s=new q(e,t);return s.position.set(r.position.x||0,r.position.y||0,r.position.z||0),s.quaternion.set(r.rotation.x||0,r.rotation.y||0,r.rotation.z||0,r.rotation.w||0),s}getRapierPhysicsOptions(e={}){return d.merge({type:"dynamic",canSleep:!1,restitution:1.1,mass:1,friction:.5,sensor:!1,linvel:{x:0,y:0,z:0},angvel:{x:0,y:0,z:0}},e)}getRapierBody(e={},t={},r={}){e=this.getRapierPhysicsOptions(e);let s={dynamic:(o={})=>c.RigidBodyDesc.dynamic(),fixed:(o={})=>c.RigidBodyDesc.fixed(),kinematicVelocityBased:(o={})=>c.RigidBodyDesc.kinematicVelocityBased(),kinematicPositionBased:(o={})=>c.RigidBodyDesc.kinematicPositionBased()}[e.type](e);return this.world.createRigidBody(s.setTranslation(t.x||0,t.y||0,t.z||0).setRotation({x:0,y:0,z:0,w:0,...r}).setCanSleep(e.canSleep).setLinvel(e.linvel.x,e.linvel.y,e.linvel.z).setAngvel(e.angvel))}getRapierShape(e={},t={}){e=this.getRapierPhysicsOptions(e),t=this.getThreejsGeometryOptions(t);let r={box:(s={})=>c.ColliderDesc.cuboid(s.width/2,s.height/2,s.depth/2),capsule:(s={})=>c.ColliderDesc.capsule(s.length/2,s.radius),cone:(s={})=>null,cylinder:(s={})=>null,plane:(s={})=>null,sphere:(s={})=>c.ColliderDesc.ball(s.radius)}[t.type](t);if(!r)throw new Error(`Undefined shape "${t.type}"`);return r.setMass(e.mass).setRestitution(e.restitution).setFriction(e.friction).setSensor(e.sensor)}basicMeshAdd(e={}){e=d.merge({position:{x:0,y:0,z:0},rotation:{w:0,x:0,y:0,z:0},geometry:this.getThreejsGeometryOptions(),material:this.getThreejsMaterialOptions(),physics:this.getRapierPhysicsOptions()},e);const t=this.getThreejsGeometry(e.geometry),r=this.getThreejsMaterial(e.material),s=this.getThreejsMesh(t,r,e);this.parent.game.scene.add(s);const o=this.getRapierBody(e.physics,e.position,e.rotation),i=this.getRapierShape(e.physics,e.geometry);return this.dynamicBodyAdd({mesh:s,body:o,shape:i})}applyPhysicsBodyTrimesh(e={}){e=d.merge({object:null,physics:this.getRapierPhysicsOptions(),filter:t=>!0},e),e.object.traverse(t=>{if(!t.isMesh||!e.filter(t))return;const r=t.geometry.clone();r.applyMatrix4(t.matrixWorld),r.computeVertexNormals();let s=r.attributes.position.array,o=r.index.array;const i=this.getRapierBody(e.physics,{x:t.position.x,y:t.position.y,z:t.position.z},{x:t.quaternion.x,y:t.quaternion.y,z:t.quaternion.z,w:t.quaternion.w});let l=c.ColliderDesc.trimesh(new Float32Array(new Float32Array(s)),new Uint32Array(new Uint32Array(o))).setActiveEvents(c.ActiveEvents.COLLISION_EVENTS);this.dynamicBodyAdd({mesh:t,body:i,shape:l})})}dynamicBodyAdd({mesh:e,body:t,shape:r}){const s=d.uuid(),o=this.world.createCollider(r,t),i={uuid:s,mesh:e,body:t,shape:r,collider:o};return this.dynamicBodies[s]=i,i}dynamicBodyRemove(e){delete this.dynamicBodies[e]}characterController(){return new class{constructor(e){n(this,"parent",null);n(this,"controller",null);n(this,"collider",null);this.parent=e,this.collider=(()=>{let t=new c.RigidBodyDesc(c.RigidBodyType.KinematicPositionBased),r=e.world.createRigidBody(t),s=new c.ColliderDesc(new c.Cuboid(.5,.5,.5));return e.world.createCollider(s,r)})(),this.controller=e.world.createCharacterController(.01),this.controller.setSlideEnabled(!0),this.controller.setMaxSlopeClimbAngle(45*Math.PI/180),this.controller.setMinSlopeSlideAngle(30*Math.PI/180),this.controller.enableAutostep(.5,.2,!0),this.controller.enableSnapToGround(.5),this.controller.setApplyImpulsesToDynamicBodies(!0),this.controller.setCharacterMass(1)}move(e){let t=parent.world.createRigidBody(new c.RigidBodyDesc(c.RigidBodyType.KinematicPositionBased));const r=parent.world.createCollider(new c.ColliderDesc(new c.Cuboid(.5,.5,.5)),t);let s=new y;s.x+=1,this.controller.computeColliderMovement(r,s);for(var o=0;o<controller.numComputedCollisions();o++)controller.computedCollision(o);movement.copy(controller.computedMovement()),nextTranslation.copy(t.translation()),nextTranslation.add(movement),t.setNextKinematicTranslation(nextTranslation)}}(this)}}class te{constructor(a,e){n(this,"mesh");n(this,"world");n(this,"enabled",!0);this.world=e,this.mesh=new V(new W,new N({color:16777215,vertexColors:!0})),this.mesh.frustumCulled=!1,a.add(this.mesh)}update(){if(this.enabled){const{vertices:a,colors:e}=this.world.debugRender();this.mesh.geometry.setAttribute("position",new u(a,3)),this.mesh.geometry.setAttribute("color",new u(e,4)),this.mesh.visible=!0}else this.mesh.visible=!1}}const me=class extends Q{constructor(e=null,t={}){super();n(this,"root",null);n(this,"parent",null);n(this,"cameraModes",["First","Third"]);n(this,"options",{});n(this,"player",null);n(this,"characterController",null);this.root=e.parent,this.parent=e,this.setOptions(t)}setOptions(e={}){if(this.options=d.merge({camera:null,inputForward:["w"],inputBackward:["s"],inputLeft:["a"],inputRight:["d"],inputJump:["Space"],mouseSensitivity:.5,cameraMode:"First",playerSpeed:.06,playerJumpForce:.2,playerMaterial:{type:"basic",color:16711680},playerGeometry:{type:"capsule",radius:.2,length:.5},playerPosition:{x:0,y:0,z:0},playerPhysics:{type:"kinematicPositionBased",mass:1,friction:0,restitution:0,linvel:{x:1}}},this.options,e),!this.options.camera)throw new Error("We need a camera")}onCreate(){this.cameraInit()}cameraModeSet(e){if(!this.cameraModes.includes(e))throw new Error(`Camera mode "${e}" does not exists`);this.options.cameraMode!=e&&(this.options.cameraMode=e,this.cameraInit())}cameraInit(){const{world:e}=this.root.physics,{Vec3:t,Quat:r}=this.root.game.helpers;this.player||(this.characterController=e.createCharacterController(.1),this.characterController.setSlideEnabled(!0),this.characterController.setMaxSlopeClimbAngle(45*Math.PI/180),this.characterController.setMinSlopeSlideAngle(30*Math.PI/180),this.characterController.enableAutostep(.5,.2,!0),this.characterController.enableSnapToGround(.5),this.characterController.setApplyImpulsesToDynamicBodies(!0),this.characterController.setCharacterMass(1),this.player=this.root.physics.basicMeshAdd({material:this.options.playerMaterial,geometry:this.options.playerGeometry,position:this.options.playerPosition,physics:this.options.playerPhysics}),this.playerSpeed=0,this.playerRot=r(this.player.body.rotation()).toJson(),this.playerGrounded=!1,this.playerJumpForce=0,this.playerGravity=0,this.mouseMovement={x:0,y:0},this.pointerLockControl=new class{constructor(i){this.parent=i,this.root=i.root;let l;this.root.canvas.el.addEventListener("pointermove",p=>{this.locked()&&(this.pointerMoveHandler(p),l&&clearTimeout(l),l=setTimeout(()=>{this.parent.mouseMovement.x=0,this.parent.mouseMovement.y=0},10))})}lock(){this.root.canvas.el.requestPointerLock()}locked(){return document.pointerLockElement==this.root.canvas.el}pointerMoveHandler(i){this.parent.mouseMovement.x=i.movementX*.002*this.parent.options.mouseSensitivity,this.parent.mouseMovement.y=i.movementY*.002*this.parent.options.mouseSensitivity}}(this));const s=`camera${this.options.cameraMode}Create`,o=`camera${this.options.cameraMode}Update`;typeof this[s]=="function"&&this[s](),this.root.input.keyboard("Numpad0","keyup",()=>{let i=this.cameraModes.indexOf(this.options.cameraMode)+1;typeof this.cameraModes[i]>"u"&&(i=0),this.cameraModeSet(this.cameraModes[i])}),this.root.event.on("update",()=>{this.playerGrounded=this.characterController.computedGrounded(),this.playerGrounded?this.playerGravity=0:this.playerGravity=Math.max(-9.2,this.playerGravity-.005),typeof this[o]=="function"&&this[o]()})}cameraFirstCreate(){this.player.mesh.attach(this.root.game.camera)}cameraFirstUpdate(){this.root.game.helpers,this.root.game.camera.position.set(0,1,0),this.root.game.camera.rotation.set(0,0,0),this.basicWasdMovimentationUpdate()}cameraThirdCreate(){this.player.mesh.attach(this.root.game.camera)}cameraThirdUpdate(){this.root.game.helpers,this.root.game.camera.position.set(0,1,2),this.root.game.camera.rotation.set(-.3,0,0),this.basicWasdMovimentationUpdate()}basicWasdMovimentationUpdate(){const{Vec3:e,Quat:t}=this.root.game.helpers;let r=e(),s=e(),o=e();this.playerSpeed=0,this.root.input.keyboard("w")&&(s.z=1),this.root.input.keyboard("s")&&(s.z=-1),this.root.input.keyboard("a")&&(s.x=1),this.root.input.keyboard("d")&&(s.x=-1),this.root.input.keyboard("Space")&&this.playerGrounded&&(this.playerGravity+=this.options.playerJumpForce),this.playerRot.y+=this.mouseMovement.x*-1,r.subVectors(s,o).normalize().multiplyScalar(this.options.playerSpeed*-1);const i=this.root.game.camera.getWorldDirection(new y),l=Math.atan2(i.x,i.z);r.applyAxisAngle(e({x:0,y:1,z:0}),l).multiplyScalar(-1);const p={x:r.x,y:this.playerGravity,z:r.z};this.characterController.computeColliderMovement(this.player.collider,p),this.player.body.setNextKinematicTranslation(e().copy(this.player.body.translation()).add(this.characterController.computedMovement())),this.player.body.setNextKinematicRotation(t().setFromEuler(new g(0,this.playerRot.y,0)))}};export{me as C,ce as I,le as S};
