var f=Object.defineProperty;var g=(l,t,e)=>t in l?f(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var a=(l,t,e)=>g(l,typeof t!="symbol"?t+"":t,e);import{u as w}from"./BOLl47Qg.js";import{O as u,a as y}from"./BwviEZV2.js";import{T as v,S as b,C as x,W as C,f as P,P as E,g as p,E as L,O as k,L as R,c as A,d as S,e as m}from"./oSmP2IjT.js";import{G as M}from"./F7f5gjRj.js";const U=class{constructor(t,e){a(this,"mesh");a(this,"world");a(this,"enabled",!0);this.world=e,this.mesh=new R(new A,new S({color:16777215,vertexColors:!0})),this.mesh.frustumCulled=!1,t.add(this.mesh)}update(){if(this.enabled){const{vertices:t,colors:e}=this.world.debugRender();this.mesh.geometry.setAttribute("position",new m(t,3)),this.mesh.geometry.setAttribute("color",new m(e,4)),this.mesh.visible=!0}else this.mesh.visible=!1}},D=class{constructor(t={}){a(this,"options",{el:null,debug:!1});a(this,"canvas",{el:null,width:0,height:0});a(this,"scene",null);a(this,"camera",null);a(this,"clock",null);a(this,"renderer",null);a(this,"debug",null);a(this,"world",null);a(this,"dynamicBodies",[]);a(this,"THREE",null);a(this,"RAPIER",null);a(this,"events",[]);a(this,"scripts",[]);this.options={el:null,...t},this.THREE=v,this.RAPIER=u}init(){return new Promise((t,e)=>{setTimeout(async()=>{await u.init(),await this.initCanvas(),await this.initGame(),await this.initRapier(),await this.initPreload(),await this.initCanvas(),await this.initInputEvents(),await this.initUpdate(),t({})},10)})}destroy(){this.dispatch("destroy")}async initCanvas(){this.canvas.el||(this.canvas.el=document.querySelector(this.options.el),window.addEventListener("resize",async()=>{await this.initCanvas()})),this.canvas.el&&(this.canvas.width=this.canvas.el.offsetWidth,this.canvas.height=this.canvas.el.offsetHeight),this.camera&&(this.camera.aspect=this.canvas.width/this.canvas.height,this.camera.updateProjectionMatrix()),this.renderer&&this.renderer.setSize(this.canvas.width,this.canvas.height)}async initGame(){this.scene||(this.scene=new b,this.scene.name=this.scene.name||"Main Scene"),this.camera||(this.camera=this.cameraDefault()),this.clock||(this.clock=new x),this.renderer||(this.renderer=new C({antialias:!0}),this.canvas.el.innerHTML="",this.canvas.el.style.position="relative",this.canvas.el.style.minHeight="100px",this.canvas.el.appendChild(this.renderer.domElement),this.renderer.domElement.style.width="100%",this.renderer.domElement.style.height="100%")}async initRapier(){this.world=new u.World({x:0,y:-9.81,z:0}),this.options.debug&&(this.debug=new U(this.scene,this.world)),this.on("update",()=>{this.debug&&this.world&&this.debug.update()})}initPreload(){return new Promise((t,e)=>{const n=w(),s=Object.assign(new P,{onProgress:(r,o,c)=>{const d=o/c*100;this.dispatch("loadProgress",{progress:d,url:r,itemsLoaded:o,itemsTotal:c})},onLoad:()=>{this.dispatch("loadSuccess"),t()}}),i={gltf:r=>new M(s).load(r.url,o=>{r.loaded=!0,r.model=o,r.onLoad(r)})};let h=this.preload();Object.entries(h).map(([r,o])=>{if(o={name:r,onLoad:()=>null,...o,ext:o.url.split("?").at(0).split(".").at(-1),loaded:!1,model:null},!o.url.startsWith("http")){const c=new URL(location.href),d=o.url;o.url=c.origin,n.app.baseURL&&(n.app.baseURL.startsWith("/")||(o.url+="/"),o.url+=n.app.baseURL,!n.app.baseURL.endsWith("/")&&!d.startsWith("/")&&(o.url+="/"),o.url+=d)}typeof i[o.ext]=="function"&&i[o.ext](o)})})}async initInputEvents(){let t=[{type:"mouse",name:"click"},{type:"mouse",name:"mouseenter"},{type:"mouse",name:"mouseleave"},{type:"mouse",name:"mousemove"},{type:"mouse",name:"pointermove"},{type:"mouse",name:"pointerdown"},{type:"mouse",name:"pointerout"},{type:"mouse",name:"pointerlockchange"},{type:"keyboard",name:"keyup"},{type:"keyboard",name:"keydown"}];const e=s=>{this.dispatch("input",s),this.dispatch(`input.${s.type}`,s)};let n=[];t.map(s=>{n.push({...s,handler:e})}),n.map(s=>{document.addEventListener(s.name,s.handler)}),this.on("destroy",()=>{n.map(s=>{document.removeEventListener(s.name,s.handler)})})}async initUpdate(){this.onCreate(),this.dispatch("create");const t=()=>{this.onUpdate(),this.dispatch("update"),this.scripts.map(e=>{e.onUpdate()}),this.renderer.render(this.scene,this.camera),requestAnimationFrame(t)};requestAnimationFrame(t)}preload(){return{}}on(t,e){this.events.push({name:t,callback:e})}dispatch(...t){const e=t,n=e.shift();this.events.filter(s=>s.name==n).map(({name:s,callback:i})=>{i.apply(this,e)}),this.parent&&this.parent.dispatch(...t)}cameraDefault(){const{width:t,height:e}=this.canvas;return new E(50,t/e,1,1e3)}getOrbitControls(t=null,e=null){t=t||this.camera,e=e||this.renderer;const n=new y(t,e.domElement);return this.on("update",()=>{n.update()}),n}getPointerLockControls(t={}){const e=new Proxy({target:null,pointerSpeed:1,minPolarAngle:0,maxPolarAngle:Math.PI,updateAxisX:!0,updateAxisY:!0,...t,locked:!1,script:this,lock(){this.script.canvas.el.requestPointerLock()},moveForward(n){const s=e.target,i=new p;i.setFromMatrixColumn(s.matrix,0),i.crossVectors(s.up,i),s.position.addScaledVector(i,n)},moveRight(n){const s=e.target,i=new p;i.setFromMatrixColumn(s.matrix,0),s.position.addScaledVector(i,n)}},{get(n,s){return s=="locked"?!!document.pointerLockElement:n[s]}});return this.on("input.click",()=>{e.lock()}),this.on("input.pointermove",n=>{if(!e.locked||!e.target)return;const s=Math.PI/2,i=e.target,h=.002*e.pointerSpeed,r=new L(0,0,0,"YXZ");r.setFromQuaternion(i.quaternion),e.updateAxisY&&(r.y-=n.movementX*h),e.updateAxisX&&(r.x-=n.movementY*h,r.x=Math.max(s-e.maxPolarAngle,Math.min(s-e.minPolarAngle,r.x))),i.quaternion.setFromEuler(r)}),e}getInputsControl(t={}){let e={};for(let n in t)e[n]=t[n]({type:null});return this.on("input",n=>{for(let s in t)e[s]=t[s](n)}),e}scriptAttach(t,e){e.object=t,e.scene=this,this.scripts.push(e),e.onCreate()}addPhysics(t){let e={};e.mesh=new k,e.body=void 0,e.shape=u.ColliderDesc.cuboid(.5,.5,.5).setMass(1).setRestitution(1.1),e=t(e),this.scene.add(e.mesh),this.world.createCollider(e.shape,e.body),this.dynamicBodies.push(e),this.on("update",()=>{this.dynamicBodies.map(({mesh:s,body:i,shape:h})=>{i&&(s.position.copy(i.translation()),s.quaternion.copy(i.rotation()))});const n=this.clock.getDelta();this.world.timestep=Math.min(n,.1),this.world.step()})}onCreate(){}onUpdate(){}},B=class{constructor(){a(this,"object",null);a(this,"scene",null)}onCreate(){}onUpdate(){}};export{D as S,B as a};
