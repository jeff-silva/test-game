var g=Object.defineProperty;var f=(n,e,t)=>e in n?g(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var r=(n,e,t)=>f(n,typeof e!="symbol"?e+"":e,t);import{_ as y}from"./gpickxZl.js";import{O as w,V as p,A as v,k as x,b as _,L as A,j as M,c as b,d as S,i as k,W as L}from"./BZ4hlF37.js";import{l as c,a as P,P as I,G as C,A as D}from"./BiHZC8mx.js";import{n as j,p as G,m as E,w as F,o as O,a as m,t as W,u as z}from"./DJA06tGj.js";/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|LGPL-3.0}
 */class U extends w{constructor(){super(),this.isExtendedObject3D=!0,this.isGroup=!1,this.vector3=new p,this.hasBody=!1,this.fragmentDepth=0,this.breakable=!1,this.fractureImpulse=1,this._currentAnimation="",this._animationActions=new Map,this.name=`object-${this.id}`}get world(){return{theta:this.worldTheta,phi:this.worldPhi}}get worldTheta(){return this.getWorldDirection(this.vector3),Math.atan2(this.vector3.x,this.vector3.z)}get worldPhi(){return this.getWorldDirection(this.vector3),Math.acos(this.vector3.y)}set animationMixer(e){this._animationMixer=e}get animationMixer(){return this._animationMixer||(this._animationMixer=new v(this)),this._animationMixer}get anims(){return{current:this._currentAnimation,add:(e,t)=>this._animsAdd(e,t),get:e=>this._animsGet(e),play:(e,t=500,s=!0)=>this._animsPlay(e,t,s),mixer:this.animationMixer}}get animation(){return c('Please use "anims" instead of "animation"'),this.anims}_animsAdd(e,t){this._animationActions.set(e,this.animationMixer.clipAction(t))}_animsGet(e){const t=this._animationActions.get(e);return t||c(`Animation(${e}) not found!`),t}_animsPlay(e,t=500,s=!0){const i=this._animationActions.get(e),a=this._animationActions.get(this._currentAnimation);i&&(i.reset(),a&&(i.crossFadeFrom(a,t/1e3,!0),i.clampWhenFinished=!0),s||i.setLoop(x,0),i.play()),this._currentAnimation=e}setAction(e){c(`setAction(${e}) is deprecated. Use animation.play(${e}) instead!`)}traverse(e){super.traverse(e)}traverseVisible(e){super.traverseVisible(e)}traverseAncestors(e){super.traverseAncestors(e)}}/**
 * @description  This code has originally been copied from Sketchbook
 *
 * @author       swift502 <blaha.j502@gmail.com> (http://jblaha.art/)
 * @copyright    Copyright (c) 2018 swift502; Project Url: https://github.com/swift502/Sketchbook
 * @license      {@link https://github.com/swift502/Sketchbook/blob/master/LICENSE GPL-3.0}
 *
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE LGPL-3.0}
 */class V{constructor(e,t,s){this.camera=e,this.target=t,this.config=s;const{offset:i=new p(0,0,0),sensitivity:a=new _(.25,.25),radius:o=8,targetRadius:h=10,interpolationFactor:d=.05,pointerLock:X=!0,autoUpdate:Y=!0}=s;this.offset=i,this.sensitivity=a,this.radius=o,this.targetRadius=h,this.interpolationFactor=d,this.theta=0,this.phi=0}update(e,t){const s=this.target.position.clone().add(this.offset);this.camera.position.copy(s),this.theta-=e*(this.sensitivity.x/2),this.theta%=360,this.phi+=t*(-this.sensitivity.y/2),this.phi=Math.min(85,Math.max(-85,this.phi));const i=new p;i.x=s.x+this.radius*Math.sin(this.theta*Math.PI/180)*Math.cos(this.phi*Math.PI/180),i.y=s.y+this.radius*Math.sin(this.phi*Math.PI/180),i.z=s.z+this.radius*Math.cos(this.theta*Math.PI/180)*Math.cos(this.phi*Math.PI/180),this.camera.updateMatrix(),this.camera.lookAt(i)}}class l{constructor(){r(this,"events",[]);r(this,"keyboard",{});r(this,"mouse",{})}on(e,t){this.events.push({name:e,callback:t})}dispatch(...e){const t=e,s=t.shift();this.events.filter(i=>i.name==s).map(({name:i,callback:a})=>{a.apply(this,t)}),this.parent&&this.parent.dispatch(...e)}inputDefine(e={}){let t={};return Object.entries(e).map(([s,i])=>{t[s]=i({type:null})}),new Proxy(t,{get:(s,i)=>typeof e[i]=="function"?e[i]():t[i]||null})}inputInit(){["keyup","keydown","click"].map(e=>{document.addEventListener(e,t=>{t.key&&(this.keyboard[t.key]=t.type=="keydown")})}),["mousemove","pointerdown","pointermove","mousedown","mouseup"].map(e=>{document.addEventListener(e,t=>{t.type=="pointermove"&&(this.mouse.movementX=t.movementX,this.mouse.movementY=t.movementY),this.mouse.offsetX=t.offsetX,this.mouse.offsetY=t.offsetY,this.mouse.l=t.type=="mousedown"&&t.button==0,this.mouse.m=t.type=="mousedown"&&t.button==1,this.mouse.b=t.type=="mousedown"&&t.button==2})})}getScope(e={}){return{THREE:M,...this,on:this.on,dispatch:this.dispatch,getInput:this.getInput,...e}}}const B=class extends l{constructor(t={}){super();r(this,"options",{});r(this,"canvas",{target:null,width:0,height:0});r(this,"assets",{progress:0,items:{},manager:null});r(this,"game",{scene:null,camera:null,renderer:null,clock:null,physics:null});r(this,"scripts",{items:[]});this.options={el:null,...t},this.inputInit(),j(()=>{this.canvasInit(()=>{this.gameInit(()=>{this.assetsInit()})})})}canvasInit(t=()=>null){setTimeout(()=>{if(!this.options.el)return;const s=i=>{i.canvas.width=i.canvas.target.offsetWidth,i.canvas.height=i.canvas.target.offsetHeight,i.game.camera&&(i.game.camera.aspect=i.canvas.width/i.canvas.height,i.game.camera.updateProjectionMatrix()),i.game.renderer&&i.game.renderer.setSize(i.canvas.width,i.canvas.height)};(this.canvas.target=document.querySelector(this.options.el))&&(s(this),window.addEventListener("resize",()=>{s(this)})),t()},10)}assetsInit(t=()=>null){this.assets.manager=new A,this.assets.manager.onProgress=(i,a,o)=>{const h={progress:a/o*100,url:i,itemsLoaded:a,itemsTotal:o};this.assets.progress=h.progress,this.onLoadProgress(this.getScope({managerProgress:h})),this.dispatch("loadProgress",this.getScope({managerProgress:h}))},this.assets.manager.onLoad=()=>{const i={progress:100};this.onLoadSuccess(this.getScope({managerProgress:i})),this.dispatch("loadSuccess",this.getScope({managerProgress:i})),t()};const s={gltf:(i,a,o)=>new C(o).load(a.url,h=>{a.loaded=!0,a.model=h,a.onLoad(this.getScope({loadedItem:a}))})};Object.entries(this.assets.items).map(([i,a])=>{const o=a.url.split("?").at(0).split(".").at(-1);s[o](i,a,this.assets.manager)})}assetAdd(t,s={}){this.assets.items[t]={loaded:!1,name:t,onLoad:i=>null,...s}}gameInit(t=()=>null){P("/assets/threejs/ammo",async()=>{this.game.scene=new b,this.game.camera=new S(50,this.canvas.width/this.canvas.height,1,1e3),this.game.clock=new k,this.game.physics=new D(this.game.scene),this.game.physics.debug.enable(),this.game.physics.debug.mode(1),this.game.renderer=new L({antialias:!0}),this.canvas.target&&(this.canvas.target.appendChild(this.game.renderer.domElement),this.game.renderer.domElement.style.width="100%",this.game.renderer.domElement.style.height="100%"),t(),this.onCreate(this.getScope()),this.dispatch("create",this.getScope());const s=()=>{this.onUpdate(this.getScope()),this.dispatch("update",this.getScope()),this.scripts.items.map(i=>{i.onUpdate(this.getScope()),i.dispatch("update",this.getScope())}),this.game.physics.updateDebugger(),this.game.physics.update(this.game.clock.getDelta()*1e3),this.game.renderer.render(this.game.scene,this.game.camera),requestAnimationFrame(s)};requestAnimationFrame(s)})}scriptAttach(t,s){this.scripts.items.push(s),s.object=t,s.parent=this,s.onCreate(this.getScope())}pointerLockControls(t=null,s=null){return t=t===null?this.game.camera:t,s=s===null?this.canvas.target:s,new I(t,s)}onLoadProgress(t){}onLoadSuccess(t){}onCreate(t){}onUpdate(t){}onInput(t){}},u=class extends l{constructor(){super();r(this,"name",null);r(this,"object",null);r(this,"parent",null)}onCreate(t){}onUpdate(t){}onInput(t){}};class H extends u{constructor(){super(...arguments);r(this,"name","WASD movimentation")}onCreate(t){this.locked=!1,this.player=new U,t.game.scene.add(this.player),this.firstPersonControl=new V(t.game.camera,this.player,{}),this.playerMove=this.inputDefine({front:()=>this.keyboard.w?1:this.keyboard.s?-1:0,side:()=>this.keyboard.a?-1:this.keyboard.d?1:0}),this.on("update",s=>{console.log(this.playerMove.front)})}}class R extends u{constructor(){super(...arguments);r(this,"name","Scene script")}onCreate(t){this.collisionsIgnore=["Line037_12","Line037_16","Line037_17","Line037_21"],this.collisions=[],this.object.traverse(s=>{this.collisionsIgnore.includes(s.name)&&this.collisionsIgnore.push(s.parent.name)}),this.object.traverse(s=>{this.collisionsIgnore.includes(s.name)||(this.collisions.push(t.game.physics.add.existing(s,{mass:0,shape:"concaveMesh",collisionFlags:2})),s.body.checkCollisions=!0)})}}class T extends B{constructor(...e){super(...e),this.assetAdd("scene",{url:"/assets/threejs/models/low-poly-level/scene.gltf",onLoad:t=>{const s=t.loadedItem.model.scene;t.game.scene.add(s),this.scriptAttach(s,new R)}})}onCreate(e){this.scriptAttach(e.game.camera,new H)}}const tt={__name:"test-02",setup(n){new T({el:"#app-game"});const e=G({input:{}});return(t,s)=>{const i=y;return O(),E(i,{name:"main"},{default:F(()=>[s[0]||(s[0]=m("div",{id:"app-game",style:{width:"100%",height:"600px"}},null,-1)),s[1]||(s[1]=m("a",{href:""},"refresh",-1)),m("pre",null,"appGameData: "+W(z(e)),1)]),_:1})}}};export{tt as default};
